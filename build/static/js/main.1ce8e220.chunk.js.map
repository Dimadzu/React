{"version":3,"sources":["logo.svg","Movieitem.js","MovieTabs.js","Pagination.js","App.js","api.js","serviceWorker.js","index.js"],"names":["module","exports","MovieItem","state","willWatch","this","props","movie","removeMovie","addmovieToWillWatch","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","setState","bind","React","Component","MovieTabs","sort_by","updateSortBy","handleClick","value","getClassLink","Pagination","page","paginationPage","nextClick","total_pages","pagevalue","aria-label","class","href","App","updateMovies","movies","filter","item","id","updateMovieWillWatch","movieWillWatch","getMovies","fetch","then","response","json","data","results","totalPages","prevProps","prevState","console","log","map","key","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1ce8e220.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nclass MovieItem extends React.Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\twillWatch: false\r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\trender(){\r\n\tconst{movie, removeMovie, addmovieToWillWatch,removeMovieFromWillWatch}= this.props;\r\n\t\t\r\n\t return (<div className=\"card\">\r\n\t <img\r\n     className=\"card-img-top\"\r\n     src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\r\n       movie.poster_path}`} \r\n     alt=\"\"\r\n     />\r\n        <div className=\"card-body\">\r\n     <h6 className=\"card-title\">{movie.title}</h6>\r\n     <div className=\"d-flex justify-content-between align-items-center\">\r\n       <p className=\"mb-0\">Rating: {movie.vote_average}</p>\r\n       {this.state.willWatch ? ( <button type=\"button\" className=\"btn btn-sucess\" onClick={ () =>\r\n       {this.setState({\r\n       willWatch: false\r\n              });\r\n        removeMovieFromWillWatch(movie)}}>\r\n         Remove Will Watch\r\n       </button>):(\r\n<button type=\"button\" className=\"btn btn-secondary\"\r\nonClick={ () =>{\r\nthis.setState({\r\n\t\twillWatch: true\r\n\t});\r\naddmovieToWillWatch(movie)}}>\r\n         Add Will Watch\r\n       </button>)}\r\n       \r\n     </div>\r\n\t\t <button onClick={removeMovie.bind(null,movie)}>Delete item</button>\r\n</div>\r\n</div>\r\n\t\t );\r\n}\r\n\t\r\n}\r\n\r\n\r\n\t \r\n\t \r\n\texport default MovieItem; ","import React from \"react\";\r\n\r\nconst MovieTabs = props => {\r\n\tconst{sort_by, updateSortBy}=props;\r\n\tconst handleClick=value=>{\r\n\t\treturn()=>{\r\n\t\tupdateSortBy(value)}\r\n\t}\r\n\tconst getClassLink=value=>{\r\n\t\treturn `nav-link ${sort_by===value ? \"active\" : \"\"}`\r\n\t}\r\n  return (\r\n    <ul className=\"tabs nav nav-pills\">\r\n      <li className=\"nav-item\">\r\n        <div className={getClassLink(\"popularity.desc\")} onClick={\r\n     handleClick(\"popularity.desc\")}>\r\n          Popularity desc\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <div className={getClassLink(\"revenue.desc\")} onClick={\r\n     handleClick(\"revenue.desc\")}>Revenue desc</div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <div className={getClassLink(\"vote_average.desc\")} onClick={\r\n     handleClick(\"vote_average.desc\")}>Vote avetage desc</div>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieTabs;","import React from \"react\";\r\n\r\nconst Pagination = props => {\r\n\tconst{page, paginationPage, total_pages}=props;\r\n\tconst nextClick=pagevalue=>{\r\n\t\tif(pagevalue>=1){\r\n\t\treturn ()=>{\r\n\t\t\tpaginationPage(pagevalue)\r\n\t\t}\r\n\t\r\n\t}\r\n\t}\r\n  return (\r\n     <nav aria-label=\"Page navigation example\">\r\n  <ul class=\"pagination\">\r\n    <li class=\"page-item\" onClick={nextClick(props.page-1)}><a class=\"page-link\" href=\"#\">Previous</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">{props.page}</a></li>\r\n\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">...</a></li>\r\n\t<li class=\"page-item\"><a class=\"page-link\" href=\"#\">{props.total_pages}</a></li>\t\r\n    <li class=\"page-item\" onClick={nextClick(props.page+1)}><a class=\"page-link\" href=\"#\">Next</a></li>\r\n  </ul>\r\n</nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;","\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport logo from './logo.svg';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './App.css';\r\n//import {moviesData} from './moviesData';\r\nimport MovieItem from './Movieitem';\r\nimport {API_URL, API_KEY_3} from './api.js';\r\nimport MovieTabs from './MovieTabs.js';\r\nimport Pagination from './Pagination.js';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n\t\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\t\tmovies: [],\r\n\t\t\tmovieWillWatch: [],\r\n\t\t\tsort_by: \"popularity.desc\",\r\n\t\t\tpage: 1,\r\n\t\t\ttotalPages: \" \"\r\n\t\t\t\r\n\t\t};\r\n\t}\r\n\t\r\n\tremoveMovie=movie=>{\r\n\tconst updateMovies=this.state.movies.filter(function(item){\r\n\t\treturn item.id !== movie.id;\r\n\t});\r\n\tthis.setState({\r\n\t\tmovies: updateMovies\r\n\t});\r\n}\r\n\taddmovieToWillWatch=movie=>{\r\n\t\tconst updateMovieWillWatch=[...this.state.movieWillWatch,movie];\r\n\t\tthis.setState({\r\n\t\tmovieWillWatch: updateMovieWillWatch\r\n\t});\r\n\t}\r\n\t\r\n\t\t\r\n\t\tremoveMovieFromWillWatch=movie=>{\r\n\tconst updateMovieWillWatch=this.state.movieWillWatch.filter(function(item){\r\n\t\treturn item.id !== movie.id;\r\n\t});\r\n\tthis.setState({\r\n\t\tmovieWillWatch: updateMovieWillWatch\r\n\t});\r\n} \r\n\tcomponentDidMount() {\r\n     this.getMovies();\r\n \r\n  };\r\n\r\n componentDidUpdate(prevProps, prevState){\r\n\t  if((prevState.page!==this.state.page) || (prevState.sort_by!==this.state.sort_by)){\r\n\tthis.getMovies();\r\n\t  }\r\n\t  \r\n  }\r\n    getMovies=()=>{\r\n\t   fetch(\r\n    `${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.page}&page.maximum`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          movies: data.results,\r\n\t\t  totalPages: data.total_pages\t\r\n        });\r\n      });\t\r\n\t\t\r\n\t}\r\n\tupdateSortBy=value=>{\r\n\t\tthis.setState({\r\n\t\t\tsort_by: value\r\n\t\t});\r\n\t}\r\n\t\r\n\tpaginationPage=pagevalue=>{\r\n\t\tthis.setState({\r\n\t\t\tpage: pagevalue\r\n\t\t});\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tconsole.log(this.state.totalPages);\r\n     return (\r\n    <div className=\"container\">\r\n\t\t<div className=\"row\"> \r\n\t\t <div className=\"col-9\">\r\n\t\t <div className=\"row mb-4\">\r\n\t\t <div className=\"col-12\">\r\n\t\t <MovieTabs sort_by={this.state.sort_by}\r\n\t\t updateSortBy={this.updateSortBy}\r\n\t\t />\r\n\t\t </div>\r\n\t\t </div>\t\r\n\t\t <div className=\"row\">\r\n\t\t {this.state.movies.map(movie=>{\r\n\t\t return(\r\n\t\t <div className=\"col-6\" key={movie.id}>\r\n\t\t <MovieItem \r\n\t\t  movie={movie}\r\n\t\t  removeMovie={this.removeMovie}\r\n\t\t addmovieToWillWatch={this.addmovieToWillWatch}\r\n\t\t removeMovieFromWillWatch={this.removeMovieFromWillWatch}/>\r\n\r\n\t\t </div> \r\n\t\t ) \r\n\t\t })}\r\n\t\t </div>\r\n\t\t  <div className=\"row mb-4\">\r\n\t\t <div className=\"col-12\">\r\n\t\t <Pagination\r\n\t\t total_pages={this.state.totalPages}\r\n\t\t page={this.state.page}\r\n\t\t paginationPage={this.paginationPage}/>\r\n\t\t </div>\r\n\t\t </div>\t\r\n\t      </div> \r\n      <div className=\"col-3\">\r\n\t\t  <p>Will watch: {this.state.movieWillWatch.length}</p>\r\n\t\t  </div>\r\n\t \t</div> \r\n    </div>\r\n\t\t );\r\n\t}\r\n};\r\n\r\n//function App() {\r\n//  return (\r\n//    <div className=\"App\">\r\n//     <h2>{moviesData[0].title}</h2>\r\n//    </div>\r\n//  );\r\n//}\r\n\r\nexport default App;\r\n","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}